version: '3.8'

services:
  postgres:
    container_name: database
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - web

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - web
    labels:
      - "traefik.enable.true"
      - "traefik.http.routers.frontend.rule=Host(`XXXXXX`) && PathPrefixStrip:/angular-app;PathPrefix:/angular-app"
      - "traefik.http.routers.angular-frontend.entrypoints=websecure"
      - "traefik.http.routers.angular-frontend.tls=true"
      - "traefik.http.routers.angular-frontend.tls.certresolver=myresolver"



  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8443:3000"
    env_file:
      - backend/.env
    depends_on:
      - postgres
    networks:
      - web

  traefik:
    container_name: traefik
    image: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
 #     - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=youremail@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - web

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: root@newtec.de
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "8000:80"

networks:
  web:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  letsencrypt:
    driver: local
